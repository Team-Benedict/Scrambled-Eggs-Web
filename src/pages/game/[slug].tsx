import Head from "next/head";
import { getGame, getGames } from "~/server/api/routers/game";

import { prisma } from "~/server/db";

type GameData = {
  name: null | string,
  description: null | string
}


const Game = (props : GameData) => {
  return (
    <>
      <Head>
        <title>Scrambled Eggs: Web</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <h2 className="text-xl">{props?.name || "Game does not exist"}</h2>
        <p>{props?.description}</p>
      </main>
    </>
  );
};

export const getStaticPaths = async () => {
  const games = await getGames({ prisma });
  const paths: string[] = [];
  games?.forEach(({ id }) => {
    paths.push(`/game/${id}`);
  });
  return { paths, fallback: true };
}

export const getStaticProps = async ({params}: {params: {slug: string}}) => {
  console.log(params);
  if (params) {
    const {slug} : {slug: string} = params;
    const game = await getGame({prisma, input: {id: BigInt(slug)}})
    console.log(game) 
    return {
      props: {
        name: game?.name || null,
        description: game?.description || null
      },
    };
  }

  return {
    props: {},
  };
}

export default Game;
