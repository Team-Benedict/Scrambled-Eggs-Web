import { game } from "@prisma/client";
import { type NextPage } from "next";
import Head from "next/head";
import { useState, useEffect } from "react";

import { api } from "../client/api";
import { Game } from "~/client/api/game";

const Home: NextPage = () => {
  const [games, setGames] = useState<game[]>();
  const [name, setName] = useState<string>("");

  const gameApi = Game();

  const queryAllGame = api.game.getAll.useQuery();

  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    event.preventDefault();

    setName(event.currentTarget.value);
  };

  const deleteGame = async (id: bigint) => {
    gameApi.delete(id, (data) => {
      const { id: deletedId } = data;
      const updatedGames = games?.filter((game) => game.id != deletedId);
      setGames(updatedGames);
    });
  };

  const createGame = async (name: string) => {
    gameApi.create(name, (data) => {
      const current = games;
      current?.push(data);
      setGames(current);
      setName("");
    });
  };

  const handleSubmission = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    createGame(name);
  };

  useEffect(() => {
    if (queryAllGame.isSuccess) {
      setGames(queryAllGame.data);
    }
  }, [queryAllGame.isSuccess]);

  return (
    <>
      <Head>
        <title>Scrambled Eggs: Web</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <div className="flex flex-row rounded-md bg-gradient-to-b from-[#2e026d] to-[#fff] p-24">
          <div className="mr-8 rounded-md border-2 p-4">
            {games?.map((item: { id: bigint; name: string }) => (
              <div
                key={`${item.id}`}
                className="mb-2 flex flex-row items-center bg-slate-100"
              >
                <a className="mr-2" href={`/game/${item.id}`}>
                  {item.name}
                </a>
                <button
                  type="button"
                  className="rounded-small ml-auto bg-slate-300 p-2"
                  onClick={() => deleteGame(item.id)}
                >
                  X
                </button>
              </div>
            ))}
          </div>
          <form className="flex flex-col" onSubmit={handleSubmission}>
            <div className="flex flex-col">
              <label htmlFor="game-name">Name</label>
              <input
                id="game-name"
                name="name"
                type="text"
                value={name}
                className="mb-2"
                onChange={handleNameChange}
              ></input>
            </div>
            <button type="submit" className="radius-2 bg-slate-400 p-2">
              Create!
            </button>
          </form>
        </div>
      </main>
    </>
  );
};

export default Home;
